{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "CSGO CFG",
  "scopeName": "source.cs2script",
  "patterns": [
    { "include": "#comment" },
    { "include": "#punctuation-semicolon" },
    { "include": "#actions1" },
    { "include": "#actions2" },
    { "include": "#CS-command" },
    { "include": "#number" },
    { "include": "#variable1" },
    { "include": "#variable2" }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line.double-slash",
          "begin": "^\\s*//\\s*",
          "end": "$"
        }
      ]
    },
    "actions1": {
      "patterns": [
        {
          "name": "constant.language",
          "match": "(?i)(?<!//)\\b(yaw|pitch|invnext|invprev|slot\\d{1,2})\\b"
        },
        {
          "name": "constant.language",
          "match": "(?i)(?<!//)^\\s*\\b(yaw|pitch|invnext|invprev|slot\\d{1,2})\\b"
        },
        {
          "name": "constant.language",
          "match": "(?i)(?<!//)tick\\((\\d+)\\)\\s*$"
        },
        {
          "name": "constant.language",
          "match": "(?i)(?<!//)^\\s*tick\\((\\d+)\\)\\s*$"
        }
      ]
    },
    "actions2": {
      "patterns": [
        {
          "name": "constant.language",
          "match": "(?i)(?<!//)([\\+|-]turnright|[\\+|-]turnleft|[\\+|-]attack|[\\+|-]attack2|[\\+|-]jump|[\\+|-]sprint|[\\+|-]use|[\\+|-]duck|[\\+|-]reload|[\\+|-]forward|[\\+|-]back|[\\+|-]left|[\\+|-]right|[\\+|-]lookatweapon|[\\+|-]noclip|[\\+|-]radialradio(2|3)|[\\+|-]radialradio)\\b"
        },
        {
          "name": "constant.language",
          "match": "(?i)(?<!//)^\\s*([\\+|-]turnright|[\\+|-]turnleft|[\\+|-]attack|[\\+|-]attack2|[\\+|-]jump|[\\+|-]sprint|[\\+|-]use|[\\+|-]duck|[\\+|-]reload|[\\+|-]forward|[\\+|-]back|[\\+|-]left|[\\+|-]right|[\\+|-]lookatweapon|[\\+|-]noclip|[\\+|-]radialradio(2|3)|[\\+|-]radialradio)\\b"
        },
        {
          "name": "constant.language",
          "match": "(?i)(?<!//)\\b(turnleft|turnright|yaw|pitch|duck|attack|attack2|sprint|jump|use|forward|back|right|left|forwardback|rightleft)\\b"
        },
        {
          "name": "constant.language",
          "match": "(?i)(?<!//)^\\s*\\b(turnleft|turnright|yaw|pitch|duck|attack|attack2|sprint|jump|use|forward|back|right|left|forwardback|rightleft)\\b"
        }
      ]
    },
    "CS-command": {
      "patterns": [
        {
          "name": "keyword.control.cfg",
          "match": "(?i)(?<!//)\\b(getpos_exact|getpos|setpos|setang|setpos_player|setpos_exact|setang_exact|play)\\b"
        },
        {
          "name": "keyword.control.cfg",
          "match": "(?i)(?<!//)^\\s*\\b(getpos_exact|getpos|setpos|setang|setpos_player|setpos_exact|setang_exact|play)\\b"
        }
      ]
    },
    "variable1": {
      "patterns": [
        {
          "name": "support.function",
          "match": "(?i)(?<!//)^\\s*(\\S+)"
        }
      ]
    },
    "variable2": {
      "patterns": [
        {
          "name": "variable.other.readwrite.js",
          "match": "(?i)(?<!//)([\\+|-]?[\\$a-zA-Z0-9_\\p{L}][\\$a-zA-Z0-9_\\p{L}\\+\\-_]*)"
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "(?<=^|\\s)([\\+|-]?\\d+(\\.\\d+)?(?:[eE][\\+|-]?\\d+)?)(?=\\s|$|;|\"|,)"
        }
      ]
    },
    "punctuation-semicolon": {
      "patterns": [
        {
          "name": "keyword.operator",
          "match": "\\;"
        },
        {
          "name": "keyword.operator",
          "match": "\\/|\\\\"
        },
        {
          "name": "keyword.operator",
          "match": "\\."
        },
        {
          "name": "keyword.operator",
          "match": "\""
        },
        {
          "name": "keyword.operator",
          "match": "\\'"
        },
        {
          "name": "keyword.operator",
          "match": "\\|"
        },
        {
          "name": "keyword.operator",
          "match": "\\~"
        },
        {
          "name": "keyword.operator",
          "match": "\\:"
        },
        {
          "name": "keyword.operator",
          "match": "\\[|\\]"
        },
        {
          "name": "keyword.operator",
          "match": "\\(|\\)"
        },
        {
          "name": "keyword.operator",
          "match": "\\="
        },
        {
          "name": "keyword.operator",
          "match": "\\#"
        },
        {
          "name": "keyword.operator",
          "match": "\\<|\\>"
        },
        {
          "name": "keyword.operator",
          "match": "\\{|\\}"
        }
      ]
    }
  }
}